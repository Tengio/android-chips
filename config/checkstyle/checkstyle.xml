<?xml version="1.0"?><!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">
    <module name="SuppressionFilter">
        <property name="file"
                  value="${checkstyleConfigDir}/checkstyle-suppressions.xml"/>
    </module>

    <module name="FileLength"/>
    <module name="FileTabCharacter"/>
    <module name="NewLineAtEndOfFile">
        <property name="severity"
                  value="ignore"/>
    </module>

    <!-- Trailing spaces -->
    <module name="RegexpSingleline">
        <property name="format"
                  value="\s+$"/>
        <property name="message"
                  value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--module name="JavadocMethod"/-->
        <!--module name="JavadocType"/-->
        <!--module name="JavadocVariable"/-->
        <module name="JavadocStyle"/>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <module name="DeclarationOrder"/>


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max"
                      value="140"/>
        </module>
        <module name="MethodLength"/>
        <!--module name="ParameterNumber"/-->

        <!-- Relaxed indentation as doesn't work on lambdas and generate only problems -->
        <!--<module name="Indentation">-->
        <!--<property name="throwsIndent" value="8"/>-->
        <!--</module>-->
        <module name="ModifiedControlVariable"/>
        <module name="DefaultComesLast"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="ParenPad">
            <property name="tokens"
                      value="CTOR_CALL, METHOD_CALL, SUPER_CTOR_CALL, ANNOTATION, ANNOTATION_FIELD_DEF"/>
            <property name="option"
                      value="nospace"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="GenericWhitespace"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad">
            <property name="option"
                      value="nospace"/>
            <property name="allowLineBreaks"
                      value="false"/>
        </module>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <!--module name="AvoidNestedBlocks"/-->
        <!--module name="EmptyBlock"/-->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--module name="AvoidInlineConditionals"/-->
        <module name="CovariantEquals"/>
        <!--module name="DoubleCheckedLocking"/-->
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <!--<module name="HiddenField"/>-->
        <module name="IllegalInstantiation"/>
        <!--module name="InnerAssignment"/-->
        <module name="MagicNumber">
            <property name="severity"
                      value="ignore"/>
            <property name="ignoreNumbers"
                      value="-1, 0, 1, 0.5, 1.5, 1, 2, 3, 255"/>
        </module>
        <!--module name="MissingSwitchDefault"/-->
        <!--<module name="RedundantThrows"/>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="OneStatementPerLine"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--module name="DesignForExtension"/-->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <!--<module name="InterfaceIsType"/>-->
        <!--module name="VisibilityModifier"/-->


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!--module name="FinalParameters"/-->
        <module name="TodoComment">
            <property name="severity"
                      value="warning"/>
            <property name="format"
                      value="TODO"/>
        </module>
        <module name="UpperEll"/>

    </module>

    <!-- Not using NewLineAtEndOfFile because the new line chars change 
           on different operating systems and that rule allows only one type. This rule 
           is not actually checking for new lines, but it will work if we check that 
           there are not white spaces at the end of a line with another rule. -->
    <module name="RegexpMultiline">
        <property name="format"
                  value="\S\z"/>
        <property name="message"
                  value="Missing new line at the end of file"/>
        <property name="severity"
                  value="ignore"/>
    </module>

    <module name="RegexpMultiline">
        <property name="format"
                  value="\S\s\s\z"/>
        <property name="message"
                  value="Only one new line is allowed at the end of a file"/>
    </module>

    <module name="RegexpSingleline">
        <property name="format"
                  value="\s+$"/>
        <property name="message"
                  value="White spaces at the end of line"/>
    </module>
</module>